#!/bin/bash
#
# Â©2020 Copyright 2020 Robert D. Chin
#
# Usage: bash mountup.sh
#        (not sh mountup.sh)
#
# +--------------------------------------------------------------------------+
# |                                                                          |
# |              Customize Server Menu choice options below.                 |
# |                                                                          |
# +--------------------------------------------------------------------------+
#
#@@Exit#@@Return to previous menu.#@@break
#@@hansolo#@@Hansolo Server publicly shared files.#@@f_menu_action^$GUI^hansolo
#@@chewbacca#@@Chewbacca Server shared photos.#@@f_menu_action^$GUI^chewbacca
#@@luke#@@Luke Server shared school files.#@@f_menu_action^$GUI^luke
#@@leia#@@Leia Server shared music.#@@f_menu_action^$GUI^leia
#@@yoda#@@Yoda Server shared department files.#@@f_menu_action^$GUI^yoda
#@@r2d2#@@R2D2 Server shared geek stuff.#@@f_menu_action^$GUI^r2d2
#@@c3po#@@C3PO Server shared Reference Library.#@@f_menu_action^$GUI^c3po
#
# +----------------------------------------+
# |        Default Variable Values         |
# +----------------------------------------+
#
VERSION="2020-12-09 20:23"
#
#@ Brief Description
#@
#@ Library of functions, mountup.lib contains the Main Menu functions
#@ used by script mountup.sh.
#@
#@ See script mountup.sh for Edit History.
#
# +----------------------------------------+
# |          Function f_menu_server        |
# +----------------------------------------+
#
#     Rev: 2020-09-18
#  Inputs: $1=GUI.
#    Uses: ARRAY_FILE, GENERATED_FILE, MENU_TITLE.
# Outputs: None.
#
f_menu_server () {
      #
      GENERATED_FILE=$THIS_DIR/$THIS_FILE"_menu_server_generated.lib"
      #
      # Create generated menu script from array data.
      #
      # Note: ***If Menu title contains spaces,
      #       ***the size of the menu window will be too narrow.
      #
      # Menu title MUST use underscores instead of spaces.
      MENU_TITLE="Server_Menu"
      TEMP_FILE=$THIS_DIR/$THIS_FILE"_menu_server_temp.txt"
      #
      #================================================================================
      # EDIT THE LINE BELOW TO DEFINE $ARRAY_FILE AS THE ACTUAL FILE NAME (LIBRARY)
      # WHERE THE MENU ITEM DATA IS LOCATED. THE LINES OF DATA ARE PREFIXED BY "#@@".
      #================================================================================
      #
      # Specify library file name with menu item data.
      ARRAY_FILE="$THIS_DIR/mountup.lib"
      #
      # Create arrays from data.
      f_menu_arrays $ARRAY_FILE
      #
      # Create generated menu script from array data.
      f_create_show_menu $1 $GENERATED_FILE $MENU_TITLE $MAX_LENGTH $MAX_LINES $MAX_CHOICE_LENGTH $TEMP_FILE
      #
      if [ -r $GENERATED_FILE ] ; then
         rm $GENERATED_FILE
      fi
      #
      if [ -r $TEMP_FILE ] ; then
         rm $TEMP_FILE
      fi
      #
}  # End of function f_menu_server.
#
# +----------------------------------------+
# |      Function f_show_mount_points      |
# +----------------------------------------+
#
#  Inputs: $1=GUI - "dialog" or "whiptail" The CLI GUI application in use.
#          $THIS_FILE,
#    Uses: X, Y, ERROR, $TEMP_FILE.
# Outputs: None.
#
f_show_mount_points () {
      #
      THIS_FILE="mountup.lib"
      TEMP_FILE=$THIS_DIR/$THIS_FILE"_temp.txt"
      date >$TEMP_FILE
      echo >>$TEMP_FILE
      echo "Remote Server             Space    Local Mount-Point" >>$TEMP_FILE
      # Test if this version of "df" has these OPTIONS.
      df -h --type=cifs --output=source,avail,target >/dev/null 2>&1
      ERROR=$?
      if [ $ERROR -eq 1 ] ; then
         # Older version of "df" or nothing mounted, so use df with minimal OPTIONS.
         df -h --type=cifs >>$TEMP_FILE
         ERROR=$?
         if [ $ERROR -eq 1 ] ; then
            echo >>$TEMP_FILE
            echo " >>> No Samba shared directories are mounted <<<" >>$TEMP_FILE
            echo "    No Samba smb://[mount-points] are mounted." >>$TEMP_FILE
         else
            echo >>$TEMP_FILE
            grep "//" /etc/mtab | awk -F "," '{ print $1,$5 }' | awk '{ print $5,"mounted",$1}' >>$TEMP_FILE
         fi
      else
         df -h --type=cifs --output=source,avail,target >>$TEMP_FILE
         echo >>$TEMP_FILE
         grep "//" /etc/mtab | awk -F "," '{ print $1,$5 }' | awk '{ print $5,"mounted",$1}' >>$TEMP_FILE
      fi
      #
      if [ $ERROR -eq 1 ] ; then
         f_message $1 "OK" "No Samba shared directories are mounted\n   No Samba mount-points are mounted." $TEMP_FILE
      else
         f_message $1 "OK" "(use arrow keys to scroll up/down/side-ways)" $TEMP_FILE
      fi
      #
      if [ -r $TEMP_FILE ] ; then
         rm $TEMP_FILE
      fi
      #
      # Throw out these variables.
      unset X Y ERROR
} # End of function f_show_mount_points.
#
