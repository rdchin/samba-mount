#!/bin/bash
#
VERSION="2017-01-07 15:00"
THIS_FILE="mountup_gui.sh"
#
#@ Brief Description
#@
#@ This script will mount shared cifs (Samba) directories from one or more
#@ file servers. The shared (Samba) directories will be mounted on the
#@ corresponding mount-point (directories) on theLocal PC.
#@
#@ Code Change History is maintained in the library file, "mountup_lib_gui.lib"
#@ and can be read from the Main Menu.
#
# **************************************
# ***     Start of Main Program      ***
# **************************************
#
# If an error occurs, the f_abort_txt() function will be called.
# trap 'f_abort_txt' 0
# set -e
#
# SUDO_ASKPASS="sudoask" ; export SUDO_ASKPASS
#
. mountup_lib_gui.lib  # Invoke library.
# Test for BASH environment.
f_test_environment
#
# Test for GUI (Whiptail or Dialog) or pure text environment.
f_detect_ui
#GUI="whiptail"  #Test diagnostic line.
#GUI="dialog"    #Test diagnostic line.
#
# Set SCRIPT_PATH to directory path of script.
f_script_path
MAINMENU_DIR=$SCRIPT_PATH
THIS_DIR=$MAINMENU_DIR  # Set $THIS_DIR to location of Main Menu.
#
GENERATED_FILE="mountup_server_menu_gui.lib"
# $GUI --infobox "Running script \"$THIS_FILE\" to create script \"$GENERATED_FILE\"." 3 78 ; sleep 3
#
f_server_arrays
#
f_update_menu_gui $GUI $GENERATED_FILE
#
# echo "Generation of script \"$GENERATED_FILE\" is now complete." >temp.txt
# echo >>temp.txt
# echo "Script $GENERATED_FILE is now ready to be run" >>temp.txt
# echo "by using command:" >>temp.txt
# echo >>temp.txt
# echo "\"bash $GENERATED_FILE\"" >>temp.txt
# echo >>temp.txt
# echo "When run, it will display the Main Server Menu" >>temp.txt
# echo "allowing the user to mount or dismount shared directories" >>temp.txt
# echo "on the selected file server."  >>temp.txt
# $GUI --textbox temp.txt 15 70
# rm temp.txt
#
. $GENERATED_FILE  # Invoke Generated file.
f_server_menu_gui $GUI
#
if [ -r $GENERATED_FILE ] ; then
   rm $GENERATED_FILE
fi

exit 0  # This cleanly closes the process generated by #!bin/bash. 
        # Otherwise every time this script is run, another instance of
        # process /bin/bash is created using up resources.
# all dun dun noodles.
